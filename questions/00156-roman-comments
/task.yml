id: |
  00156-roman-comments
question:
  typescript: ""
  python: >

    def int_to_mini_roman(number):
        """
        Given a positive integer, obtain its roman numeral equivalent as a string,
        and return it in lowercase.
        Restrictions: 1 <= num <= 1000

        Examples:
        >>> int_to_mini_roman(19) == 'xix'
        >>> int_to_mini_roman(152) == 'clii'
        >>> int_to_mini_roman(426) == 'cdxxvi'
        """
test:
  typescript: ""
  python: |+
    def check(candidate):

        # Check some simple cases
        assert candidate(19) == 'xix'
        assert candidate(152) == 'clii'
        assert candidate(251) == 'ccli'
        assert candidate(426) == 'cdxxvi'
        assert candidate(500) == 'd'
        assert candidate(1) == 'i'
        assert candidate(4) == 'iv'
        assert candidate(43) == 'xliii'
        assert candidate(90) == 'xc'
        assert candidate(94) == 'xciv'
        assert candidate(532) == 'dxxxii'
        assert candidate(900) == 'cm'
        assert candidate(994) == 'cmxciv'
        assert candidate(1000) == 'm'

        # Check some edge cases that are easy to work out by hand.
        assert True

difficulty: unclassified
