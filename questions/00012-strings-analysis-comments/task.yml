id: 00012-strings-analysis-comments
question:
  typescript: >
    
    function longest(strings: string[]): string | null {
        // Out of list of strings, return the longest one. Return the first one in case of multiple
        // strings of the same length. Return None in case the input list is empty.
        // corresponding python doctest:
        // >>> longest([])
        //
        // >>> longest(['a', 'b', 'c'])
        // 'a'
        // >>> longest(['a', 'bb', 'ccc'])
        // 'ccc'
    }
  python: >
    from typing import List, Optional



    def longest(strings: List[str]) -> Optional[str]:
        """ Out of list of strings, return the longest one. Return the first one in case of multiple
        strings of the same length. Return None in case the input list is empty.
        >>> longest([])

        >>> longest(['a', 'b', 'c'])
        'a'
        >>> longest(['a', 'bb', 'ccc'])
        'ccc'
        """
test:
  typescript: >
    
    function check(candidate: (input: string[]) => string | null): void {
        // assert candidate([]) == None
        // assert candidate(['x', 'y', 'z']) == 'x'
        // assert candidate(['x', 'yyy', 'zzzz', 'www', 'kkkk', 'abc']) == 'zzzz'
    }
  python: |
    

    def check(candidate):
        assert candidate([]) == None
        assert candidate(['x', 'y', 'z']) == 'x'
        assert candidate(['x', 'yyy', 'zzzz', 'www', 'kkkk', 'abc']) == 'zzzz'
difficulty: unclassified
